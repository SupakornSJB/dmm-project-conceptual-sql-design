// Some suggestions
// Should we add a payments table to track the payments??

// added a few columns to user table
Table User {
  id int [pk]
  name varchar
  email varchar [unique, not null]
  account_type varchar [not null] // customer, owner, admin
  created_at datetime [not null]
}

Table UserLocation {
	id int [pk]
	user_id int [ref: > User.id]
	name varchar(256) [not null]
	location varchar(1024) [not null]
	latitude float [not null]
	longtitude float [not null]
}

Table Space {
  id int [pk]
  name varchar [not null]
  location varchar [not null]
  latitude float [not null]
  longtitude float [not null]
  capacity int [not null]
  size float [not null]
}

// Assuming multiple admins, M:N relation
Table SpaceOwner {
  user_id int [pk, ref: > User.id]
  space_id int [pk, ref: > Space.id]
  role varchar  [not null] // primary_owner, co_admin 
}

// Facilities (separated into different tables)
Table FacilityType {
  id int [pk]
  name varchar // store type of facility here (table, wifi, tv, etc)
}

Table SpaceFacilities {
  id int [pk]
  space_id int [ref: > Space.id]
  facility_type_id int [ref: > FacilityType.id] // reference id of that facility
  total_amount int [not null] // all that the space have, the available amount at time should be derived instead
}

// Rental Rates (separated into different tables like facility)
Table RentalRateType {
  code varchar [pk] // HR, HD, FD
  description varchar
}

Table SpaceRentalFeeRate {
  space_id int [pk, ref: > Space.id]
  rate_code varchar [pk, ref: > RentalRateType.code]
  rate decimal [not null]
  currency varchar [not null]
}

// Bookings (added a surrogate key)
Table SpaceBooking {
  id int [pk]
  space_id int [not null, ref: > Space.id, ref: > SpaceRentalFeeRate.space_id]
  booked_period_start datetime [not null]
  rental_rate id [ref: - SpaceRentalFeeRate.rate_code]
  rental_unit int // rental_fee_rate_amount * rental rate = rental fee
  booker_id int [not null, ref: > User.id]
  created_at datetime [not null]
  updated_at datetime [not null]
  approved_by_user_id int [ref: > User.id] // confirmation
  approved_by_user_at_time datetime
  reason varchar // booking reason
  check_in_time datetime // null if not checked in
  check_out_time datetime // null if not checked out
}

// Booked facilities (surrogate key in booking can be used)
Table SpaceBookingBookedFacilities {
  booking_id int [pk, ref: > SpaceBooking.id]
  facility_id int [pk, ref: > SpaceFacilities.id]
  amount int [not null]
}

// Feedback (feedback tied to booking id instead of space id so that user can give feedback of each booking)
Table SpaceFeedback {
  id int [pk]
  booking_id int [not null, ref: > SpaceBooking.id]
  user_id int [not null, ref: > User.id]
  rating int  [not null] // 1-5
  comment varchar
  created_at datetime [not null]
}
