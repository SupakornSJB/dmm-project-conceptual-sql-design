// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

// Possible improvement
// - Currently assuming one admin per space. In reality, a space can be managed by multiple admin and vice versa

Table Space {
  id int [pk]
  owner_id int [not null]
  name varchar
  location varchar
  location_geo geography
  capacity int
  size float
}

ref : Space.owner_id > User.id

Table SpaceRentalFee {
  space_id int [pk] // fk composite
  rate varchar [pk] // HR - Hourly, HD, FD // composite
  amount varchar
  currency varchar
}

ref: Space.id > SpaceRentalFee.space_id

// Many - Many: User - Space
Table SpaceFeedback {
  id int [pk] // Assume user can make multiple feedback to one space
  space_id int [not null]
  created_by_user_id int
  created_at datetime
  rating int // Value: 1-5
  comment varchar
}

ref: SpaceFeedback.space_id < Space.id 
ref: SpaceFeedback.created_by_user_id < User.id

Table SpaceFacilities {
  id int [pk]
  space_id int
  name varchar
  total_amount int // all that the space have, the available amount at time should be derived instead
}

ref: SpaceFacilities.space_id > Space.id

Table User {
  id int [pk]
  name varchar
}

Table SpaceBooking {
  space_id int [pk]
  booked_period_start datetime [pk]
  booked_period_end datetime
  booker_id int
  created_at datetime
  updated_at datetime
  approved_by_user_id int // confirmation
  reason varchar // booking reason
  check_in_time datetime
  check_out_time datetime
}

ref: SpaceBooking.space_id < Space.id 
ref: SpaceBooking.booker_id < User.id

// Many - Many: SpaceBooking - Facilities
Table SpaceBookingBookedFacilities {
  booked_space_id int [pk]
  booked_space_period_start datetime [pk]
  facility_id int [pk]
  amount int
}

ref: SpaceBookingBookedFacilities.facility_id > SpaceFacilities.id
ref: SpaceBookingBookedFacilities.booked_space_id > SpaceBooking.space_id
ref: SpaceBookingBookedFacilities.booked_space_period_start > SpaceBooking.booked_period_start
